name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    ## create application-database.yaml
    - name: make application-database.yml
      run: |
        ## create application-database.yml
        cd ./src/main/resources

        # application-database.yaml 파일 생성
        touch ./application-database.yml

        # GitHub-Actions 에서 설정한 값을 application-database.yml 파일에 쓰기
        echo "${{ secrets.DATABASE }}" >> ./application-database.yml
      shell: bash

    ## create application-deploy.yml
    - name: make application-deploy.yml
      run: |
        ## create application-deploy.yml
        cd ./src/main/resources

        # application-deploy.yaml 파일 생성
        touch ./application-deploy.yml

        # GitHub-Actions 에서 설정한 값을 application-database.yml 파일에 쓰기
        echo "${{ secrets.SERVER_DEPLOY_YML }}" >> ./application-deploy.yml
      shell: bash
      
    ## create secrets.yml
    - name: make secrets.yml
      run: |
        ## create secrets.yml
        cd ./src/main/resources

        # application-deploy.yaml 파일 생성
        touch ./secrets.yml

        # GitHub-Actions 에서 설정한 값을 application-database.yml 파일에 쓰기
        echo "${{ secrets.SERVER_SECRETS }}" >> ./secrets.yml
      shell: bash
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: build and release to DockerHub
      env:
        NAME: juwon8891 # 계정 명
        REPO: santa-letter-be # 레포 이름
      run: |
        docker build -t $REPO .
        docker tag $REPO:latest $NAME/$REPO:latest
        docker push $NAME/$REPO:latest 
    
    ## docker compose up
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/santa-letter-be
          docker-compose up -d
          docker image prune -f
